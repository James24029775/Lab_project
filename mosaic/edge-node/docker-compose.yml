version: '3.3'

services:
    sdn-dhcp:
        container_name: sdn-dhcp
        image: networkboot/dhcpd
        network_mode: "host"
        volumes:
            - ./dhcp/data:/data
        restart: always
        command: enp2s0

    sdn-redis:
        container_name: sdn-redis
        image: redis:7.0.4
        restart: always
        ports:
            - "6379:6379"
        volumes:
            - ./data/cache:/data
        networks:
            docker:
                ipv4_address: 172.19.1.3

    sdn-mysql:
        container_name: sdn-mysql
        build: ./docker-images/mysql
        restart: always
        ports:
            - "3306:3306"
        volumes:
            - ./data/db:/var/lib/mysql
        environment:
            MYSQL_DATABASE: sdn_db
            MYSQL_ROOT_PASSWORD: 0d9f02ldi0v8f2l41
            MYSQL_USER: sdn
            MYSQL_PASSWORD: mn962lf8sm49sh4k1
        networks:
            docker:
                ipv4_address: 172.19.1.4
    
    # sdn-flask:
    #     container_name: sdn-flask
    #     build: ./docker-images/flask
    #     restart: always
    #     ports:
    #         - "8080:8080"
    #     volumes:
    #         - ./backend:/opt/app/
    #     networks:
    #         docker:
    #             ipv4_address: 172.19.1.2
    #     depends_on:
    #         - sdn-redis
    #         - sdn-mysql


    # sdn-webui:
    #     image: webui:test
    #     ports:
    #         - "7000:7000"
    
    # sdn-controller:
    #     image: jakeyang0924/onos:test
    #     ports:
    #         - "6653:6653"
    #         - "8181:8181"
    #     networks:
    #         docker:
    #             ipv4_address: 172.19.1.5

    # sdn-text:
    #     image: text:test
    #     ports:
    #         - "9000:9000"

    # sdn-video:
    #     image: jakeyang0924/video:test
    #     ports:
    #         - "8000:8000"
    #         - "8888:8888"

    # sdn-nginx:
    #     container_name: sdn-nginx
    #     build: ./docker-images/nginx
    #     restart: always
    #     ports:
    #        - "7001:7001"
    #        - "8081:8081"
    #        - "9001:9001"
    #     networks:
    #         docker:
    #             ipv4_address: 172.19.1.6

networks:
    docker:
        ipam:
            config:
                - subnet: 172.19.1.0/24
